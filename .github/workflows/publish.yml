name: Package up and publish

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-2019 # windows-2019 supports .net framework

    env:
      CONFIG: "Release"
      OUT_FOLDER: "./build.out/"

    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine Version with GitVersion (MSBuild in Proj will do this)
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: ./GitVersion.yml

      - name: Display GitVersion SemVer
        run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"

      # ------------------------
      # build and package uSync packages
      # ------------------------
      - name: Restore
        run: dotnet restore ./src/uSync/Etch.uSync.UrlRedirects.sln

      - name: Build Etch.uSync.UrlRedirects
        run: dotnet pack ./src/uSync/Etch.uSync.UrlRedirects/Etch.uSync.UrlRedirects.csproj --no-restore -c ${{env.CONFIG}} --output ${{env.OUT_FOLDER}} /p:version=${{steps.gitversion.outputs.fullSemVer}}

      - name: Build Etch.uSync.UrlRedirects.Skybrud
        run: dotnet pack ./src/uSync/Etch.uSync.UrlRedirects.Skybrud/Etch.uSync.UrlRedirects.Skybrud.csproj --no-restore -c ${{env.CONFIG}} --output ${{env.OUT_FOLDER}} /p:version=${{steps.gitversion.outputs.fullSemVer}}

      - name: Upload nuget file as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: Nuget Build Output
          path: ${{env.OUT_FOLDER}}

      - name: Push to Nuget
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          dotnet nuget push ${{env.OUT_FOLDER}}Etch.uSync.UrlRedirects.${{steps.gitversion.outputs.fullSemVer}}.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGETAPIKEY }}
          dotnet nuget push ${{env.OUT_FOLDER}}Etch.uSync.UrlRedirects.Skybrud.${{steps.gitversion.outputs.fullSemVer}}.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGETAPIKEY }}

      # ------------------------
      # build and package uSync Legacy packages
      # ------------------------

      - name: Restore Etch.uSyncLegacy.UrlRedirects dependencies
        run: nuget restore ./src/uSyncLegacy/Etch.uSyncLegacy.UrlRedirects.sln

      - name: Pack Etch.uSyncLegacy.UrlRedirects
        run: nuget pack ./src/uSyncLegacy/Etch.uSyncLegacy.UrlRedirects/Etch.uSyncLegacy.UrlRedirects.csproj -Build -NonInteractive -OutputDirectory ${{env.OUT_FOLDER}} -Properties Configuration=${{env.CONFIG}} -Version ${{steps.gitversion.outputs.fullSemVer}} -Symbols

      - name: Pack Etch.uSyncLegacy.UrlRedirects
        run: nuget pack ./src/uSyncLegacy/Etch.uSyncLegacy.UrlRedirects.InfoCaster/Etch.uSyncLegacy.UrlRedirects.InfoCaster.csproj -Build -NonInteractive -OutputDirectory ${{env.OUT_FOLDER}} -Properties Configuration=${{env.CONFIG}} -Version ${{steps.gitversion.outputs.fullSemVer}} -Symbols

      - name: Push Etch.uSyncLegacy.UrlRedirects to Nuget
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          nuget push ${{env.OUT_FOLDER}}Etch.uSyncLegacy.UrlRedirects.${{steps.gitversion.outputs.fullSemVer}}.nupkg -SkipDuplicate -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGETAPIKEY }}
          nuget push ${{env.OUT_FOLDER}}Etch.uSyncLegacy.UrlRedirects.InfoCaster.${{steps.gitversion.outputs.fullSemVer}}.nupkg -SkipDuplicate -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGETAPIKEY }}
